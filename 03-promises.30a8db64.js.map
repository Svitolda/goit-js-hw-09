{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKaC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOH,EAAII,OAAOC,SAASC,MAAMC,OACvCC,EAAOL,OAAOH,EAAII,OAAOC,SAASG,KAAKD,OACvCE,EAASN,OAAOH,EAAII,OAAOC,SAASI,OAAOF,OAGjD,GAAIG,MAAMD,GAER,YADAE,EAAAhB,GAASiB,OAAOC,QAAQ,6BAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAC3BC,EAAcD,EAAGZ,GAAOc,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUZ,EAAKW,EAALX,MACxCK,EAAAhB,GAASiB,OAAOO,QAAQ,uBAAwCC,OAAfF,EAAS,QAAYE,OAANd,EAAM,M,IACvEe,OAAO,SAAAJ,G,IAAGC,EAAQD,EAARC,SAAUZ,EAAKW,EAALX,MACjBK,EAAAhB,GAASiB,OAAOU,QAAQ,sBAAqCF,OAAfF,EAAS,QAAYE,OAANd,EAAM,M,IAEvEJ,GAASM,EAGX,SAASO,EAAcG,EAAUZ,GAC/B,IAAMiB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAET,WAAUZ,UAEpBsB,EAAO,CAAEV,WAAUZ,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onBtnSubmitClick);\n\nfunction onBtnSubmitClick(evt) {\n  evt.preventDefault();\n\n  let delay = Number(evt.target.elements.delay.value);\n  const step = Number(evt.target.elements.step.value);\n  const amount = Number(evt.target.elements.amount.value);\n\n\n  if (isNaN(amount)) {\n    Notiflix.Notify.warning('Please fill in all fields');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay).then(({ position, delay }) =>{\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch (({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  };\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay })\n        } else {\n          reject({ position, delay })\n        }\n      }, delay);\n    });\n  }\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","target","elements","delay","value","step","amount","isNaN","$parcel$interopDefault","Notify","warning","i","createPromise","then","param","position","success","concat","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.30a8db64.js.map"}